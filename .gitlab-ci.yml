image: node:8


variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: cgawsbrokerprodgq3wrvn8c8a772q
  POSTGRES_USER: utz6kah1zq8t2nyg
  POSTGRES_PASSWORD: of2fbobp423i89ztu7g7d136h


stages:
  - test

cache:
  untracked: true
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - node_modules/

services:
   - postgres

connect:
  image: postgres
  stage: test
  script:
    - export PGPASSWORD=$POSTGRES_PASSWORD
#    - cp srt-database-export.sql.gz srt-database.sql.gz
#    - rm srt-database.sql
#    - gzip -d srt-database.sql.gz
#    - psql -h "postgres"  $POSTGRES_DB $POSTGRES_USER < srt-database.sql
#    - psql -h "postgres"  $POSTGRES_DB $POSTGRES_USER -c "COPY ( SELECT * FROM information_schema.tables WHERE table_type LIKE '%TABLE' AND table_name != 'spatial_ref_sys' ) TO STDOUT WITH CSV"

test_with_lab:
  stage: test
  coverage: '/All files[^0-9]*\d+\.\d+/'
  artifacts:
    paths:
      - coverage/
  script:
    - apt update
    - apt install -y postgresql-client
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - cp srt-database-export.sql.gz srt-database.sql.gz
    - rm -f srt-database.sql
    - gzip -d srt-database.sql.gz
    - psql -h "postgres"  $POSTGRES_DB $POSTGRES_USER < srt-database.sql
    - npm install
    - export NODE_ENV=gitlab
    - ./node_modules/.bin/sequelize db:migrate
    - npm test